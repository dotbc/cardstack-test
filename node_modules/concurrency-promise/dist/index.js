"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var promiseAll = exports.promiseAll = function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(promises, limit) {
    var _this = this;

    var result, chunks, last, data;
    return regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            if (promises.length) {
              _context2.next = 2;
              break;
            }

            return _context2.abrupt("return", []);

          case 2:
            result = [];
            chunks = split(promises, limit);
            last = chunks.reduce(function () {
              var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(a, b) {
                var data;
                return regeneratorRuntime.wrap(function _callee$(_context) {
                  while (1) {
                    switch (_context.prev = _context.next) {
                      case 0:
                        _context.next = 2;
                        return a;

                      case 2:
                        data = _context.sent;


                        result = result.concat(data);

                        return _context.abrupt("return", Promise.all(b.map(function (f) {
                          return f();
                        })));

                      case 5:
                      case "end":
                        return _context.stop();
                    }
                  }
                }, _callee, _this);
              }));

              return function (_x4, _x5) {
                return _ref2.apply(this, arguments);
              };
            }(), Promise.all([]));
            _context2.next = 7;
            return last;

          case 7:
            data = _context2.sent;


            result = result.concat(data);

            return _context2.abrupt("return", result);

          case 10:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function promiseAll(_x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();

exports.split = split;

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function split(array) {
  var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;


  var chunks = [];

  while (array.length > 0) {
    chunks.push(array.splice(0, limit));
  }

  return chunks;
}
//# sourceMappingURL=index.js.map