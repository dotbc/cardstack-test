{"version":3,"sources":["../src/index.test.js"],"names":["describe","chunks","a1","it","expect","toEqual","result","promises","Array","fill","map","v","i","push","Promise","resolve","resolved"],"mappings":";;AAAA;;;;AAEAA,SAAS,cAAT,EAAyB,YAAM;;AAE7B,MAAIC,eAAJ;AACA,MAAMC,KAAK,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAAX;;AAEAC,KAAG,OAAH,EAAY,YAAM;AAChBF,aAAS,aAAMC,EAAN,EAAU,CAAV,CAAT;;AAEAE,WAAOH,OAAO,CAAP,CAAP,EAAkBI,OAAlB,CAA0B,CAAC,CAAD,EAAI,CAAJ,CAA1B;AACAD,WAAOH,OAAO,CAAP,CAAP,EAAkBI,OAAlB,CAA0B,CAAC,CAAD,EAAI,CAAJ,CAA1B;AACAD,WAAOH,OAAO,CAAP,CAAP,EAAkBI,OAAlB,CAA0B,CAAC,CAAD,CAA1B;AACD,GAND;AAQD,CAbD;;AAeAL,SAAS,qBAAT,EAAgC,YAAM;;AAEpCG,KAAG,aAAH,0DAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEVG,kBAFU,GAED,EAFC;AAIVC,oBAJU,GAIC,IAAIC,KAAJ,CAAU,EAAV,EAAcC,IAAd,GAAqBC,GAArB,CAAyB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAClD,qBAAO,YAAM;AACXN,uBAAOO,IAAP,CAAYD,CAAZ;AACA,uBAAOE,QAAQC,OAAR,CAAgBH,CAAhB,CAAP;AACD,eAHD;AAID,aALgB,CAJD;AAAA;AAAA,mBAWO,kBAAWL,QAAX,EAAqB,CAArB,CAXP;;AAAA;AAWVS,oBAXU;;;AAahBZ,mBAAOY,QAAP,EAAiBX,OAAjB,CAAyBC,MAAzB;;AAbgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;AAgBD,CAlBD","file":"index.test.js","sourcesContent":["import { promiseAll, split } from './'\n\ndescribe('array chunks', () => {\n\n  let chunks\n  const a1 = [1,2,3,4,5]\n\n  it('split', () => {\n    chunks = split(a1, 2)\n\n    expect(chunks[0]).toEqual([1, 2])\n    expect(chunks[1]).toEqual([3, 4])\n    expect(chunks[2]).toEqual([5])\n  })\n\n})\n\ndescribe('promise concurrency', () => {\n\n  it('concurrency', async () => {\n\n    const result = []\n\n    const promises = new Array(10).fill().map((v, i) => {\n      return () => {\n        result.push(i)\n        return Promise.resolve(i)\n      }\n    })\n\n    const resolved = await promiseAll(promises, 3)\n\n    expect(resolved).toEqual(result)\n  })\n\n})\n"]}