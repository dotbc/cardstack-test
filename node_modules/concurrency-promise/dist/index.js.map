{"version":3,"sources":["../src/index.js"],"names":["promises","limit","length","result","chunks","split","last","reduce","a","b","data","concat","Promise","all","map","f","promiseAll","array","push","splice"],"mappings":";;;;;;;qEAWO,kBAA0BA,QAA1B,EAAoCC,KAApC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEAD,SAASE,MAFT;AAAA;AAAA;AAAA;;AAAA,8CAGI,EAHJ;;AAAA;AAMDC,kBANC,GAMQ,EANR;AAQCC,kBARD,GAQUC,MAAML,QAAN,EAAgBC,KAAhB,CARV;AAUCK,gBAVD,GAUQF,OAAOG,MAAP;AAAA,kFAAc,iBAAOC,CAAP,EAAUC,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEND,CAFM;;AAAA;AAEnBE,4BAFmB;;;AAIzBP,iCAASA,OAAOQ,MAAP,CAAcD,IAAd,CAAT;;AAJyB,yDAMlBE,QAAQC,GAAR,CAAYJ,EAAEK,GAAF,CAAM;AAAA,iCAAKC,GAAL;AAAA,yBAAN,CAAZ,CANkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAd;;AAAA;AAAA;AAAA;AAAA,iBAQVH,QAAQC,GAAR,CAAY,EAAZ,CARU,CAVR;AAAA;AAAA,mBAoBcP,IApBd;;AAAA;AAoBCI,gBApBD;;;AAsBLP,qBAASA,OAAOQ,MAAP,CAAcD,IAAd,CAAT;;AAtBK,8CAwBEP,MAxBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAea,U;;;;;QAXNX,K,GAAAA,K;;;;AAAT,SAASA,KAAT,CAAeY,KAAf,EAAiC;AAAA,MAAXhB,KAAW,uEAAH,CAAG;;;AAEtC,MAAMG,SAAS,EAAf;;AAEA,SAAMa,MAAMf,MAAN,GAAe,CAArB,EAAwB;AACtBE,WAAOc,IAAP,CAAYD,MAAME,MAAN,CAAa,CAAb,EAAgBlB,KAAhB,CAAZ;AACD;;AAED,SAAOG,MAAP;AACD","file":"index.js","sourcesContent":["export function split(array, limit = 1) {\n\n  const chunks = []\n\n  while(array.length > 0) {\n    chunks.push(array.splice(0, limit))\n  }\n\n  return chunks\n}\n\nexport async function promiseAll(promises, limit) {\n\n  if (!promises.length) {\n    return []\n  }\n\n  let result = []\n\n  const chunks = split(promises, limit)\n\n  const last = chunks.reduce(async (a, b) => {\n\n    const data = await a;\n\n    result = result.concat(data)\n\n    return Promise.all(b.map(f => f()))\n\n  }, Promise.all([]))\n\n  const data = await last\n\n  result = result.concat(data)\n\n  return result\n}\n"]}